{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Java Yenilikler Java 8'den 17'ye kadar gelen yenilikler 8 9 10 11 12 13 14 15 16 17","title":"Java Yenilikler"},{"location":"#java-yenilikler","text":"Java 8'den 17'ye kadar gelen yenilikler 8 9 10 11 12 13 14 15 16 17","title":"Java Yenilikler"},{"location":"10/","text":"Java 10 Var \"var\" kelimesi ile dinamik bir \u015fekilde tip tan\u0131mlanmas\u0131 yap\u0131labilmesi sa\u011fland\u0131. // Java 10 dan \u00f6nce String category = \"Ayran\"; // Java 10 dan sonra var category = \"Ayran\";","title":"Java 10"},{"location":"10/#java-10","text":"","title":"Java 10"},{"location":"10/#var","text":"\"var\" kelimesi ile dinamik bir \u015fekilde tip tan\u0131mlanmas\u0131 yap\u0131labilmesi sa\u011fland\u0131. // Java 10 dan \u00f6nce String category = \"Ayran\"; // Java 10 dan sonra var category = \"Ayran\";","title":"Var"},{"location":"11/","text":"Java 11 Kaynak Kodlar\u0131n\u0131 \u00c7al\u0131\u015ft\u0131rma Kaynak dosyalar\u0131n\u0131 compile etmeden terminal \u00fczerinde \u00e7al\u0131\u015ft\u0131rma \u00f6zelli\u011fi getirildi. $ java Main.java Files ve Strings Files ve Strings mod\u00fcllerine yeni metotlar eklendi. Path filePath = Files.writeString(Files.createTempFile(\"Categories\", \".temp\"), \"Yo\u011furt\"); String category = Files.readString(filePath); \"Yo\u011furt \".strip(); \"Yo\u011furt\".isBlank(); Dinamik Tip Tan\u0131mlamas\u0131 Lambda fonksiyonu tan\u0131mlarken dinamik bir \u015fekilde tip tan\u0131mlamas\u0131 \u00f6zelli\u011fi getirildi. (var categoryName, var productName) -> System.out.println(categoryName + \":\" + productName);","title":"Java 11"},{"location":"11/#java-11","text":"","title":"Java 11"},{"location":"11/#kaynak-kodlarn-calstrma","text":"Kaynak dosyalar\u0131n\u0131 compile etmeden terminal \u00fczerinde \u00e7al\u0131\u015ft\u0131rma \u00f6zelli\u011fi getirildi. $ java Main.java","title":"Kaynak Kodlar\u0131n\u0131 \u00c7al\u0131\u015ft\u0131rma"},{"location":"11/#files-ve-strings","text":"Files ve Strings mod\u00fcllerine yeni metotlar eklendi. Path filePath = Files.writeString(Files.createTempFile(\"Categories\", \".temp\"), \"Yo\u011furt\"); String category = Files.readString(filePath); \"Yo\u011furt \".strip(); \"Yo\u011furt\".isBlank();","title":"Files ve Strings"},{"location":"11/#dinamik-tip-tanmlamas","text":"Lambda fonksiyonu tan\u0131mlarken dinamik bir \u015fekilde tip tan\u0131mlamas\u0131 \u00f6zelli\u011fi getirildi. (var categoryName, var productName) -> System.out.println(categoryName + \":\" + productName);","title":"Dinamik Tip Tan\u0131mlamas\u0131"},{"location":"12/","text":"Java 12 Unicode Unicode 11 deste\u011fi getirildi","title":"Java 12"},{"location":"12/#java-12","text":"","title":"Java 12"},{"location":"12/#unicode","text":"Unicode 11 deste\u011fi getirildi","title":"Unicode"},{"location":"13/","text":"Java 13 Switch Case Switch Case yap\u0131s\u0131 daha kompakt bir formata d\u00f6n\u00fc\u015ft\u00fcr\u00fcld\u00fc. boolean flag = switch (category) { case \"Ayran\" -> true; case \"Tatl\u0131\" -> false; default -> throw new IllegalArgumentException(\"Hatal\u0131 kategori!\"); }; Birden fazla sat\u0131rl\u0131 String String html = \"\"\" <html> <body> <h1>Java 13!</h1> </body> </html> \"\"\";","title":"Java 13"},{"location":"13/#java-13","text":"","title":"Java 13"},{"location":"13/#switch-case","text":"Switch Case yap\u0131s\u0131 daha kompakt bir formata d\u00f6n\u00fc\u015ft\u00fcr\u00fcld\u00fc. boolean flag = switch (category) { case \"Ayran\" -> true; case \"Tatl\u0131\" -> false; default -> throw new IllegalArgumentException(\"Hatal\u0131 kategori!\"); };","title":"Switch Case"},{"location":"13/#birden-fazla-satrl-string","text":"String html = \"\"\" <html> <body> <h1>Java 13!</h1> </body> </html> \"\"\";","title":"Birden fazla sat\u0131rl\u0131 String"},{"location":"14/","text":"Java 14 Records Records mod\u00fcl\u00fc ile gereksiz kod kalabal\u0131\u011f\u0131 azalt\u0131ld\u0131. //Java 14 den \u00f6nce final class Rectangle{ public final int w; public final int h; public Rectangle(int w, int h) { this.w = w; this.h = h; } } //Java 14 record Rectangle(int w, int h){} InstanceOf Cast //Java 14 den \u00f6nce if (obj instanceof Car) { Car car = (String) obj; car.start(); } //Java 14 if (obj instanceof Car car) { car.start(); } Jpackage Bu ara\u00e7 ile birlikte art\u0131k hedef platforma do\u011frudan paket olu\u015fturulabiliyor.\\ Linux: deb, rpm\\ OSX: dmg, pkg\\ Windows: exe, msi\\","title":"Java 14"},{"location":"14/#java-14","text":"","title":"Java 14"},{"location":"14/#records","text":"Records mod\u00fcl\u00fc ile gereksiz kod kalabal\u0131\u011f\u0131 azalt\u0131ld\u0131. //Java 14 den \u00f6nce final class Rectangle{ public final int w; public final int h; public Rectangle(int w, int h) { this.w = w; this.h = h; } } //Java 14 record Rectangle(int w, int h){}","title":"Records"},{"location":"14/#instanceof-cast","text":"//Java 14 den \u00f6nce if (obj instanceof Car) { Car car = (String) obj; car.start(); } //Java 14 if (obj instanceof Car car) { car.start(); }","title":"InstanceOf Cast"},{"location":"14/#jpackage","text":"Bu ara\u00e7 ile birlikte art\u0131k hedef platforma do\u011frudan paket olu\u015fturulabiliyor.\\ Linux: deb, rpm\\ OSX: dmg, pkg\\ Windows: exe, msi\\","title":"Jpackage"},{"location":"15/","text":"Java 15 Sealed Class Alt s\u0131n\u0131flar\u0131n k\u0131s\u0131tlanabilec\u011fi \u00f6zelli\u011fi eklendi. public abstract sealed class DAO permits CustomerDAO, ProductDAO, OrderDAO {...}","title":"Java 15"},{"location":"15/#java-15","text":"","title":"Java 15"},{"location":"15/#sealed-class","text":"Alt s\u0131n\u0131flar\u0131n k\u0131s\u0131tlanabilec\u011fi \u00f6zelli\u011fi eklendi. public abstract sealed class DAO permits CustomerDAO, ProductDAO, OrderDAO {...}","title":"Sealed Class"},{"location":"16/","text":"Java 16 Unix Socket Ba\u011flant\u0131s\u0131 socket.connect(UnixDomainSocketAddress.of( \"/var/run/postgresql/.s.PGSQL.5432\"));","title":"Java 16"},{"location":"16/#java-16","text":"","title":"Java 16"},{"location":"16/#unix-socket-baglants","text":"socket.connect(UnixDomainSocketAddress.of( \"/var/run/postgresql/.s.PGSQL.5432\"));","title":"Unix Socket Ba\u011flant\u0131s\u0131"},{"location":"17/","text":"Java 17 Switch Case Switch case i\u00e7erisine \"Object\" s\u0131n\u0131f\u0131na ait bir obje g\u00f6nderip bu objenin ait oldu\u011fu s\u0131n\u0131f\u0131n bulunabilmesi sa\u011fland\u0131. public String testType(Object obj) { return switch(obj) { case Customer c -> \"Customer tipi\"; case Product p -> \"Product tipi\"; case Order o -> \"Order tipi\"; default -> \"Objenin tipi hatal\u0131!\"; }; }","title":"Java 17"},{"location":"17/#java-17","text":"","title":"Java 17"},{"location":"17/#switch-case","text":"Switch case i\u00e7erisine \"Object\" s\u0131n\u0131f\u0131na ait bir obje g\u00f6nderip bu objenin ait oldu\u011fu s\u0131n\u0131f\u0131n bulunabilmesi sa\u011fland\u0131. public String testType(Object obj) { return switch(obj) { case Customer c -> \"Customer tipi\"; case Product p -> \"Product tipi\"; case Order o -> \"Order tipi\"; default -> \"Objenin tipi hatal\u0131!\"; }; }","title":"Switch Case"},{"location":"8/","text":"Java 8 Lamba \u0130fadeleri Java 8 den \u00f6nce obje olu\u015fturuken bu \u015fekilde yap\u0131labiliyordu: Runnable runnable = new Runnable(){ @Override public void run(){ System.out.println(\"Merhaba Java!\"); } }; Java 8 ile beraber lambda ifadeleri geldi. Bu ifadeleri kullanarak kodu daha yal\u0131n bir formata d\u00f6n\u00fc\u015fm\u00fc\u015f oldu. Runnable runnable = () -> System.out.println(\"Merhaba Java 8!\"); Collections, Streams ve Metot Referenslar\u0131 List<String> categories = Arrays.asList(\"Yo\u011furt\", \"Ayran\", \"Tatl\u0131\"); Java 8 den \u00f6nce liste \u00fczerinde \u00e7e\u015fitli i\u015flemler yapmak istendi\u011finde for d\u00f6ng\u00fcs\u00fc ile yap\u0131labiliyordu. Java 8 ile beraber stream yap\u0131s\u0131n\u0131 kullanarak yap\u0131lmaya ba\u015fland\u0131. list.stream() .map(String::toUpperCase)//Method referans\u0131 kullan\u0131ld\u0131 .sorted() .forEach(System.out::println);//Method referans\u0131 kullan\u0131ld\u0131","title":"Java 8"},{"location":"8/#java-8","text":"","title":"Java 8"},{"location":"8/#lamba-ifadeleri","text":"Java 8 den \u00f6nce obje olu\u015fturuken bu \u015fekilde yap\u0131labiliyordu: Runnable runnable = new Runnable(){ @Override public void run(){ System.out.println(\"Merhaba Java!\"); } }; Java 8 ile beraber lambda ifadeleri geldi. Bu ifadeleri kullanarak kodu daha yal\u0131n bir formata d\u00f6n\u00fc\u015fm\u00fc\u015f oldu. Runnable runnable = () -> System.out.println(\"Merhaba Java 8!\");","title":"Lamba \u0130fadeleri"},{"location":"8/#collections-streams-ve-metot-referenslar","text":"List<String> categories = Arrays.asList(\"Yo\u011furt\", \"Ayran\", \"Tatl\u0131\"); Java 8 den \u00f6nce liste \u00fczerinde \u00e7e\u015fitli i\u015flemler yapmak istendi\u011finde for d\u00f6ng\u00fcs\u00fc ile yap\u0131labiliyordu. Java 8 ile beraber stream yap\u0131s\u0131n\u0131 kullanarak yap\u0131lmaya ba\u015fland\u0131. list.stream() .map(String::toUpperCase)//Method referans\u0131 kullan\u0131ld\u0131 .sorted() .forEach(System.out::println);//Method referans\u0131 kullan\u0131ld\u0131","title":"Collections, Streams ve Metot Referenslar\u0131"},{"location":"9/","text":"Java 9 Interfaces \"Interface\"ler private metotlara sahip oldu. public interface CategoryDAO{ private static void categoryPrivate(){ System.out.println(\"Private metot!\"); } } Diamond Operat\u00f6r\u00fc //Listeye ekleme yaparken compile time da de\u011fil run time da hata verecektir List<String> categories = new LinkedList(); categories.add(\"Yo\u011furt\"); categories.add(Boolean.TRUE); // Compile time da hata vermez categories.forEach(System.out::println); // java.lang.Boolean cannot be cast to java.lang.String //Hatas\u0131 verecektir //Diamond operat\u00f6r\u00fc ile bunun \u00f6n\u00fcne ge\u00e7ebiliriz. List<String> categories = new LinkedList<String>(); categories.add(\"Yo\u011furt\"); categories.add(Boolean.TRUE); // Compile time da hata verecek Collections Collections mod\u00fcl\u00fcne kullan\u0131\u015fl\u0131 yeni metotlar eklendi List<String> categoryList = List.of(\"Yo\u011furt\", \"Ayran\", \"Tatl\u0131\"); Set<String> categorySet = Set.of(\"Ayran\", \"Ayran\", \"Yo\u011furt\"); Map<String, int> categoryMap = Map.of(\"Ayran\", 1, \"Yo\u011furt\", 2); Streams Streams mod\u00fcl\u00fcne yeni metotlar eklendi Stream<String> stream = Stream.iterate(\"\", s -> s + \"s\") .takeWhile(s -> s.length() < 10); Optionals Objelere null atamak yerine tip seviyesinde bir \u00e7\u00f6z\u00fcm sunan Optionals mod\u00fcl\u00fcnde metot referenslar\u0131 i\u00e7in g\u00fcncelleme yap\u0131ld\u0131. category.ifPresentOrElse(this::getProducts, this::printNotFound); JShell Terminal \u00fczeinden basit komutlar\u0131 yaz\u0131p hemen sonucunun al\u0131nabilece\u011fi bir java shell arac\u0131 geldi. $ jshell | Welcome to JShell -- Version 9 | For an introduction type: /help intro jshell> int demo = 9 demo ==> 9 HTTPClient Java 9 dan \u00f6nce HTTP deste\u011fi konusunda third party k\u00fct\u00fcphanelere ba\u011f\u0131ml\u0131l\u0131k vard\u0131. Java 9 ile beraber varsay\u0131lan destek de sa\u011fland\u0131. Jigsaw Jigsaw Mod\u00fcl Sistemi ile beraber birden fazla JVM versiyonuna jar dosyalar\u0131n\u0131n release edilmesi sa\u011fland\u0131.","title":"Java 9"},{"location":"9/#java-9","text":"","title":"Java 9"},{"location":"9/#interfaces","text":"\"Interface\"ler private metotlara sahip oldu. public interface CategoryDAO{ private static void categoryPrivate(){ System.out.println(\"Private metot!\"); } }","title":"Interfaces"},{"location":"9/#diamond-operatoru","text":"//Listeye ekleme yaparken compile time da de\u011fil run time da hata verecektir List<String> categories = new LinkedList(); categories.add(\"Yo\u011furt\"); categories.add(Boolean.TRUE); // Compile time da hata vermez categories.forEach(System.out::println); // java.lang.Boolean cannot be cast to java.lang.String //Hatas\u0131 verecektir //Diamond operat\u00f6r\u00fc ile bunun \u00f6n\u00fcne ge\u00e7ebiliriz. List<String> categories = new LinkedList<String>(); categories.add(\"Yo\u011furt\"); categories.add(Boolean.TRUE); // Compile time da hata verecek","title":"Diamond Operat\u00f6r\u00fc"},{"location":"9/#collections","text":"Collections mod\u00fcl\u00fcne kullan\u0131\u015fl\u0131 yeni metotlar eklendi List<String> categoryList = List.of(\"Yo\u011furt\", \"Ayran\", \"Tatl\u0131\"); Set<String> categorySet = Set.of(\"Ayran\", \"Ayran\", \"Yo\u011furt\"); Map<String, int> categoryMap = Map.of(\"Ayran\", 1, \"Yo\u011furt\", 2);","title":"Collections"},{"location":"9/#streams","text":"Streams mod\u00fcl\u00fcne yeni metotlar eklendi Stream<String> stream = Stream.iterate(\"\", s -> s + \"s\") .takeWhile(s -> s.length() < 10);","title":"Streams"},{"location":"9/#optionals","text":"Objelere null atamak yerine tip seviyesinde bir \u00e7\u00f6z\u00fcm sunan Optionals mod\u00fcl\u00fcnde metot referenslar\u0131 i\u00e7in g\u00fcncelleme yap\u0131ld\u0131. category.ifPresentOrElse(this::getProducts, this::printNotFound);","title":"Optionals"},{"location":"9/#jshell","text":"Terminal \u00fczeinden basit komutlar\u0131 yaz\u0131p hemen sonucunun al\u0131nabilece\u011fi bir java shell arac\u0131 geldi. $ jshell | Welcome to JShell -- Version 9 | For an introduction type: /help intro jshell> int demo = 9 demo ==> 9","title":"JShell"},{"location":"9/#httpclient","text":"Java 9 dan \u00f6nce HTTP deste\u011fi konusunda third party k\u00fct\u00fcphanelere ba\u011f\u0131ml\u0131l\u0131k vard\u0131. Java 9 ile beraber varsay\u0131lan destek de sa\u011fland\u0131.","title":"HTTPClient"},{"location":"9/#jigsaw","text":"Jigsaw Mod\u00fcl Sistemi ile beraber birden fazla JVM versiyonuna jar dosyalar\u0131n\u0131n release edilmesi sa\u011fland\u0131.","title":"Jigsaw"}]}